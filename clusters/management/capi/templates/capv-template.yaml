apiVersion: capi.weave.works/v1alpha1
kind: CAPITemplate
metadata:
  name: cluster-template-development
  namespace: test
  labels:
    weave.works/template-type: cluster
spec:
  description: A simple VCluster template
  params:
    - name: CLUSTER_NAME
      required: true
      description: This is used for the cluster naming.
    - name: NAMESPACE
      description: Namespace to create the cluster in
    - name: KUBERNETES_VERSION
      description: Kubernetes version to use for the cluster
      options: ["1.21.14", "1.22.15", "1.23.14", "1.24.7", "1.25.3"]
  resourcetemplates:
    - apiVersion: gitops.weave.works/v1alpha1
      kind: GitopsCluster
      metadata:
        name: "${CLUSTER_NAME}"
        namespace: "${NAMESPACE}"
        labels:
          weave.works/capi: bootstrap
      spec:
        capiClusterRef:
          name: "${CLUSTER_NAME}"
    - apiVersion: cluster.x-k8s.io/v1beta1
      kind: Cluster
      metadata:
        name: "${CLUSTER_NAME}"
        namespace: "${NAMESPACE}"
      spec:
        controlPlaneRef:
          apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
          kind: VCluster
          name: "${CLUSTER_NAME}"
        infrastructureRef:
          apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
          kind: VCluster
          name: "${CLUSTER_NAME}"
    - apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
      kind: VCluster
      metadata:
        labels:
          cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
        name: "${CLUSTER_NAME}"
        namespace: "${NAMESPACE}"
      spec:
        controlPlaneEndpoint:
          host: "${CLUSTER_NAME}.turkey.local"
          port: 443
        kubernetesVersion: "${KUBERNETES_VERSION}"
        helmRelease:
          values: |-
            syncer:
              extraArgs:
              - "--tls-san=${CLUSTER_NAME}.turkey.local"
            sync:
              nodes:
                enabled: true
              persistentvolumes:
                enabled: true
              # If you want to create custom storage classes
              # inside the vcluster.
              storageclasses:
                enabled: true
              ingresses:
                enabled: true
